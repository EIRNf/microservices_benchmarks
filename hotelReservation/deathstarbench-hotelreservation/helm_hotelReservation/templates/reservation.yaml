---
apiVersion: v1
kind: Service
metadata:
  name: reservation-{{ include "hotelres.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hotelres.labels" . | nindent 4 }}
    app-name: reservation
spec:
  type: {{ include "hotelres.get" (list .Values "reservation" "service.type") }}
  ports:
    - name: "8087"
      port: 8087
      targetPort: 8087
  selector:
    {{- include "hotelres.selectorLabels" . | nindent 4 }}
    app-name: reservation

{{- if (include "hotelres.get" (list .Values "reservation" "autoscaling.enabled" "json") | mustFromJson) }}
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: reservation-{{ include "hotelres.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hotelres.labels" . | nindent 4 }}
    app-name: reservation
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: reservation-{{ include "hotelres.fullname" . }}
  minReplicas: {{ include "hotelres.get" (list .Values "reservation" "autoscaling.minReplicas") }}
  maxReplicas: {{ include "hotelres.get" (list .Values "reservation" "autoscaling.maxReplicas") }}
  metrics:
    {{- if (include "hotelres.get" (list .Values "reservation" "autoscaling.targetCPUUtilizationPercentage" "json") | mustFromJson) }}
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: {{ include "hotelres.get" (list .Values "reservation" "autoscaling.targetCPUUtilizationPercentage") }}
    {{- end }}
    {{- if (include "hotelres.get" (list .Values "reservation" "autoscaling.targetMemoryUtilizationPercentage" "json") | mustFromJson) }}
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: {{ include "hotelres.get" (list .Values "reservation" "autoscaling.targetMemoryUtilizationPercentage") }}
    {{- end }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reservation-{{ include "hotelres.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hotelres.labels" . | nindent 4 }}
    app-name: reservation
spec:
  {{- if not (include "hotelres.get" (list .Values "reservation" "autoscaling.enabled" "json") | mustFromJson) }}
  replicas: {{ include "hotelres.get" (list .Values "reservation" "replicaCount") }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hotelres.selectorLabels" . | nindent 6 }}
      app-name: reservation
  template:
    metadata:
      annotations:
        cri-resource-manager.intel.com/affinity: |
          reservation:
            - scope:
                key: pod/namespace
                operator: In
                values:
                  - {{ .Release.Namespace }}
              match:
                operator: AlwaysTrue
              weight: 111
          init-mongodb:
            - scope:
                key: pod/namespace
                operator: In
                values:
                  - {{ .Release.Namespace }}
              match:
                operator: AlwaysTrue
              weight: 111
          init-memcached:
            - scope:
                key: pod/namespace
                operator: In
                values:
                  - {{ .Release.Namespace }}
              match:
                operator: AlwaysTrue
              weight: 111
        cri-resource-manager.intel.com/anti-affinity: |
          reservation:
            - scope:
                key: pod/namespace
                operator: NotIn
                values:
                  - {{ .Release.Namespace }}
              match:
                operator: AlwaysTrue
              weight: 111
          init-mongodb:
            - scope:
                key: pod/namespace
                operator: NotIn
                values:
                  - {{ .Release.Namespace }}
              match:
                operator: AlwaysTrue
              weight: 111
          init-memcached:
            - scope:
                key: pod/namespace
                operator: NotIn
                values:
                  - {{ .Release.Namespace }}
              match:
                operator: AlwaysTrue
              weight: 111

      {{- with (include "hotelres.get" (list .Values "reservation" "podAnnotations" "json") | mustFromJson) }}
        {{- toYaml . | nindent 8}}
      {{- end }}
      labels:
        {{- include "hotelres.selectorLabels" . | nindent 8 }}
        app-name: reservation
    spec:
      {{- if .Values.evenly_distributed }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              {{- include "hotelres.selectorLabels" . | nindent 14 }}
              app-name: reservation
      {{- end }}
      {{- with (include "hotelres.get" (list .Values "reservation" "imagePullSecrets" "json") | mustFromJson) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "hotelres.serviceAccountName" . }}
      {{- end }}
      {{- with (include "hotelres.get" (list .Values "reservation" "podSecurityContext" "json") | mustFromJson) }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-memcached
          image: lianhao/busybox-jq:14
          command: ['sh', '-c', "service=$(cat /config.json | jq -r .ReserveMemcAddress | cut -d : -f 1); until nslookup -type=a $service; do echo waiting for $service; sleep 2; done"]
          volumeMounts:
            - mountPath: /config.json
              subPath: config.json
              name: config-json
        - name: init-mongodb
          image: lianhao/busybox-jq:14
          command: ['sh', '-c', "service=$(cat /config.json | jq -r .ReserveMongoAddress | cut -d : -f 1); until nslookup -type=a $service; do echo waiting for $service; sleep 2; done"]
          volumeMounts:
            - mountPath: /config.json
              subPath: config.json
              name: config-json
      containers:
        - name: reservation
          {{- with (include "hotelres.get" (list .Values "reservation" "securityContext" "json") | mustFromJson) }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "hotelres.get" (list .Values "reservation" "image.repository") }}:{{ include "hotelres.get" (list .Values "reservation" "image.tag") | default .Chart.AppVersion }}
          imagePullPolicy: {{ include "hotelres.get" (list .Values "reservation" "image.pullPolicy") }}
          command:
            - reservation
          ports:
            - containerPort: 8087
          env:
            - name: PYROSCOPE_SERVER_ADDRESS # To change Pyroscope Server Port change the value
              value: "http://pyroscope:4040"
            - name: PYROSCOPE_APPLICATION_NAME # Application name shown in the UI
              value: "reservation.service"
            - name: TLS
              value: {{ include "hotelres.get" (list .Values "reservation" "features.tls") | quote }}
            - name: JAEGER_SAMPLE_RATIO
              value: {{ include "hotelres.get" (list .Values "reservation" "features.jaegerSampleRatio") | quote }}
            - name: GC
              value: {{ include "hotelres.get" (list .Values "reservation" "features.gcPercent") | quote }}
            - name: MEMC_TIMEOUT
              value: {{ include "hotelres.get" (list .Values "reservation" "features.memcTimeout") | quote }}
          {{- with (include "hotelres.get" (list .Values "reservation" "environments" "json") | mustFromJson) }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with (include "hotelres.get" (list .Values "reservation" "resources" "json") | mustFromJson) }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /go/src/github.com/harlow/go-micro-services/config.json
              subPath: config.json
              name: config-json
          {{- if include "hotelres.needhugepage" (list .Values "reservation") }}
            - mountPath: /hugepages
              name: hugepage
          {{- end }}
      volumes:
        - name: config-json
          configMap:
            name: configmap-{{ include "hotelres.fullname" . }}
            items:
            - key: config.json
              path: config.json
      {{- if include "hotelres.needhugepage" (list .Values "reservation") }}
        - name: hugepage
          emptyDir:
            medium: HugePages
      {{- end }}
      {{- with (include "hotelres.get" (list .Values "reservation" "nodeSelector" "json") | mustFromJson) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (include "hotelres.get" (list .Values "reservation" "affinity" "json") | mustFromJson) }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (include "hotelres.get" (list .Values "reservation" "tolerations" "json") | mustFromJson) }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  
